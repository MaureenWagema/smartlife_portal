<div data-options="dxView : { name: 'Endorsements', title: '' } " >
    <div data-options="dxContent : { targetPlaceholder: 'content' } " class="dx-content-background">

        <div id="toolbar_des" data-bind="dxToolbar: { dataSource: [
             { location: 'center', 'text': 'ENDORSEMENTS' },
             { location: 'after' , widget: 'dxButton' , options: { icon: 'refresh' , text: '' , onClick: refresh_list, type:'normal' } }
             ],visible: true }">
        </div>

        <div id="loadpanel" data-bind="dxLoadPanel: { message: 'Loading...', visible: LoadPanelShown }"></div>

        <div data-bind="dxToast: {
                    message: toast_msg,
                    type: toast_type,
                    displayTime: 6000,
                    visible: isToastVisible
                }"></div>

        <!--<div align="center"><img style="background: url(images/glico_home.png) no-repeat;" src="images/glico_home.png" /></div>-->
        <br />

        <!--date search-->
        <div style="padding:2px" id="dxFormSearch" data-bind="dxForm: dxFormSearchDetails"></div>
        <hr />
        <br />


        <div class="panel panel-info">

            <!--Add the listview-->
            <div class="panel-body">
                <!--TODO create list view to display list of schools-->
                <!--menuItems: menu_items,menuMode: 'slide', height: '90%'-->
                <div style="padding-right:3px; padding-left:3px;">
                    <div style="padding:3px">

                        <div id="gridContainer" data-bind="dxDataGrid: {
                             dataSource: analysis_store,
                             wordWrapEnabled: true,
                             showColumnHeaders:true,
                             columns: analysis_columns,
                             height: '100%', width: '100%',
                             scrolling:{mode:'virtual'},
                             paging: {enabled: false},
                             searchPanel: { visible: false, width: 350 },
                             onRowPrepared: onrowPrepared,
                             grouping: {
	                                contextMenuEnabled: true
                                },
                                groupPanel: {
	                                visible: true
                                },

                             export: {
                                    allowExportSelectedData:true,
                                    enabled:true,
                                    texts: {
                                        exportAll:'Export all data',
                                        exportSelectedRows:'Export selected rows'

                                    },
                                },
                             summary: {
                                    texts: {
                                        avg: 'Avg={0}',
                                        avgOtherColumn: 'Avg of {1} is {0}',
                                        count: 'Total Proposals={0}',
                                        max: 'Max={0}',
                                        maxOtherColumn: 'Max of {1} is {0}',
                                        min: 'Min={0}',
                                        minOtherColumn: 'Min of {1} is {0}',
                                        sum: 'Total={0}',
                                        sumOtherColumn: 'Sum of {1} is {0}'
                                    },
                                    totalItems: [
                                        {
                                            column: 'policy_no',
                                            summaryType: 'count'
                                        }
                                    ],
                                    groupItems: [
                                        {
                                            column: 'policy_no',
                                            summaryType: 'count',
                                            showInGroupFooter: true,
                                            showInColumn: 'policy_no',
                                            displayFormat: '{0} Endorsement(s)'
                                        }
                                    ]
                                },
                                headerFilter: { visible: true },
                                filterRow: {
                                    visible: true,
                                    applyFilter: 'auto',
                                },
                             }">
                            <div data-options="dxTemplate:{ name:'cellTemplate' }">
                                <div class="img-container">
                                    <img data-bind="attr:{src: $data.value}" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>



        <div data-bind="dxToast: {
                    message: toast_msg,
                    type: toast_type,
                    displayTime: 6000,
                    visible: isToastVisible
                }"></div>

    </div>
</div>